<?php 

use \Drupal\views\Views;
/**
 * Implements hook_preprocess_page().
 */
function civicrm_phenix_cfonb_preprocess_page(&$variables)
{
  $variables['#attached']['library'][] = 'civicrm_phenix_cfonb/civicrm_phenix_cfonb';
  $current_path = \Drupal::service('path.current')->getPath();
  

}



use Drupal\views\ViewExecutable;

/**
 * Implements hook_views_pre_view().
 */
function civicrm_phenix_cfonb_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
  // Check if it's the view you want to alter.
  



  //Page admin utilisateurs
  if ($view->id() == 'user_admin_people' && $display_id == 'page_1') {
    
  }


}



/**
 * Implements hook_form_alter().
 */
function civicrm_phenix_cfonb_form_alter (&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $form['#attached']['library'][] = 'civicrm_phenix_cfonb/civicrm_phenix_cfonb';
}



function civicrm_phenix_cfonb_preprocess_views_view_field(&$variables) {
  
  $view = $variables['view'];
  $field = $variables['field'];
  $requests = \Drupal::request();
  $row = $variables['row'];
  $current_user = \Drupal::currentUser();
  $user_roles = $current_user->getRoles();
  if ($view->storage->id() == 'recherche' &&  $view->current_display == 'resultats_recherche') {
    if ($field->field == 'rendered_item') {
      // dump($row);
    }
  }

  
	if ($view->storage->id() == 'civievents_base_sur_le_contact_' &&  $view->current_display == 'block_5') {
    if ($field->field == 'frontend_title') {
      // $formatted = implode(' ',str_split($value, 2));
      $title = $field->getValue($row);
      $default_title = $title ? $title : $row->civicrm_group_civicrm_group_contact_title;
      $group_id = $row->civicrm_group_civicrm_group_contact_id_1;
			$html = '<div class="my-meeting">
      <a href="/civicrm-group/' . $group_id . '">' . $default_title . '</a>
      </div>';
      $html = ['#markup' =>  $html]; 
      $variables['output'] = $html;
    }
  }

    //Page detail commissions / groupe
    if ($view->storage->id() == 'civi_groupe_evenements' /* && $view->current_display == 'block_1' */) {
      $custom_service = \Drupal::service('civicrm_phenix_cfonb.custom_service');
      $custom_service->customizeViewReunionOfTheCommissionPage($variables);
  
      
    }

      // You can now use $email for further processing.
	if ($view->storage->id() == 'civievents_base_sur_le_contact_' &&  $view->current_display == 'block_7') {
    // $variables['view']->header['area']->options['content'] = [];
    if ((!in_array('super_utilisateur', $user_roles) && !in_array('admin_client', $user_roles) && !in_array('permanent', $user_roles) && !in_array('administrator', $user_roles))) {
      $variables['view']->header['area']->options['content']['value'] = '<h2><i class="far fa-calendar-alt"></i> [view:title] </h2>';
    }    
  }


  
  if ($view->storage->id() == 'civievents_base_sur_le_contact_' &&  $view->current_display == 'block_7') {
    // $custom_service->customizeMeetingList()
    $custom_service = \Drupal::service('civicrm_phenix_cfonb.custom_service');
    if ($field->field == 'title') {
      $title = $field->getValue($row);
      
      $date = $row->created_id_civicrm_contact_start_date;
      $dateArray = $custom_service->formatDateWithMonthInLetterAndHours($date);

      $variables['output'] = [
        '#theme' => 'page_list_meeting',
        '#cache' => ['max-age' => 0],
        '#content' => [
          'meeting_info' => $dateArray,
          'title' => $title,
        ],
      ];
    }
  }


}

/**
 * Implements hook_theme().
 */
function civicrm_phenix_cfonb_theme($existing, $type, $theme, $path)
{
    return [
      'civicrm_phenix_cfonb_alter_view_detail_commission_reunion' => [
        'variables' => [
        'content' => Null,
        ],
        'render element' => 'children',
        'path' => $path . '/templates',
        'template' => 'alter-view-detail-commission-reunion'
      ],
      'detail_group' => [
        'variables' => [
        'content' => Null,
        ],
        'render element' => 'children',
        'path' => $path . '/templates',
        'template' => 'phenix-custom-block-detail-group'
      ],
      'page_list_meeting' => [
        'variables' => [
        'content' => Null,
        ],
        'render element' => 'children',
        'path' => $path . '/templates',
        'template' => 'page-list-meeting'
      ],
    ];
}


/**
 * 
 * Gestion de permission par rapport à l'utilisateur anonyme
 * 
 * Implements hook_entity_access().
 */
function civicrm_phenix_cfonb_media_access(\Drupal\Core\Entity\EntityInterface $entity, $operation, \Drupal\Core\Session\AccountInterface $account) {
  if ($account->isAnonymous()) {
   
  }
}




/**
 * Ce code sert à afficher 
 * Implements hook_entity_view_alter().
 */
function civicrm_phenix_cfonb_entity_view_alter(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {

}
 

/**
 * Implements hook_views_query_alter().
 */
function civicrm_phenix_cfonb_views_query_alter(\Drupal\views\ViewExecutable $view, \Drupal\views\Plugin\views\query\QueryPluginBase $query) {

  //Feuille de presence ==> ne pas afficher les contact qui sont supprimés
  // if ($view->storage->get('id') == 'attendance_sheet' && $view->current_display == 'attendance_sheet_edit') {
  //   $query->where[] =  array(
  //     'conditions' => array(
  //       array(
  //         'field' => 'civicrm_contact_civicrm_participant.is_deleted',
  //         'value' => 'false',
  //         'operator' => '=',
  //       ),
  //     ),
  //     'type' => 'AND',
  //   );
  // }
}

/**
 * Implements hook_entity_view().
 */
function civicrm_phenix_cfonb_entity_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  // Get the current request object.
  $request = \Drupal::request();

  // Get the path of the current request.
  $current_path = $request->getPathInfo();

   // Check if the path contains "/civicrm-group/".
   if (strpos($current_path, '/civicrm-group/') !== false) {
    if ($entity->getEntityTypeId() == 'media') {
      // unset($build[''])
      $build['field_media_document'][0]['#attributes']['class'][] = 'to-hide-doc';
      $build['#attributes']['class'][] = 'to-hide-doc';
    }
  }


  if ($entity->getEntityTypeId() === 'civicrm_group' and $view_mode === 'full') {
    //unset($build['#civicrm_group']->getFieldDefinitions()['field_documents_groupe']); 
    $build['#attributes']['class'][] = 'group-detail-page';
  }

}